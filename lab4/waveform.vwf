/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ConBus")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ConBus[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ConBus";
}

SIGNAL("ConBus[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ConBus";
}

SIGNAL("ConBus[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ConBus";
}

SIGNAL("ConBus[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ConBus";
}

SIGNAL("ConBus[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ConBus";
}

SIGNAL("ConBus[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ConBus";
}

SIGNAL("ConBus[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ConBus";
}

SIGNAL("ConBus[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ConBus";
}

SIGNAL("ConBus[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "ConBus";
}

SIGNAL("WORD1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WORD1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WORD1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WORD1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WORD1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WORD1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WORD2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WORD2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WORD2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WORD2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WORD2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WORD2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ADDRESS[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ADDRESS[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ADDRESS[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ADDRESS[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ADDRESS[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ADDRESS[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ADDRESS[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ADDRESS[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count";
}

SIGNAL("count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count";
}

SIGNAL("count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count";
}

SIGNAL("FIRST_OP")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("FIRST_OP[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FIRST_OP";
}

SIGNAL("FIRST_OP[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "FIRST_OP";
}

SIGNAL("JMP")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SECOND_OP")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SECOND_OP[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SECOND_OP";
}

SIGNAL("SECOND_OP[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SECOND_OP";
}

SIGNAL("SECOND_OP[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SECOND_OP";
}

SIGNAL("SECOND_OP[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SECOND_OP";
}

SIGNAL("SECOND_OP[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SECOND_OP";
}

SIGNAL("SECOND_OP[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SECOND_OP";
}

SIGNAL("SECOND_OP[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SECOND_OP";
}

SIGNAL("SECOND_OP[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SECOND_OP";
}

SIGNAL("reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reg0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg0";
}

SIGNAL("reg0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg0";
}

SIGNAL("reg0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg0";
}

SIGNAL("reg0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg0";
}

SIGNAL("reg0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg0";
}

SIGNAL("reg0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg0";
}

SIGNAL("reg1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reg1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg1";
}

SIGNAL("reg1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg1";
}

SIGNAL("reg1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg1";
}

SIGNAL("reg1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg1";
}

SIGNAL("reg1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg1";
}

SIGNAL("reg1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg1";
}

SIGNAL("reg2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reg2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg2";
}

SIGNAL("reg2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg2";
}

SIGNAL("reg2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg2";
}

SIGNAL("reg2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg2";
}

SIGNAL("reg2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg2";
}

SIGNAL("reg2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg2";
}

SIGNAL("reg3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reg3[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg3";
}

SIGNAL("reg3[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg3";
}

SIGNAL("reg3[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg3";
}

SIGNAL("reg3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg3";
}

SIGNAL("reg3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg3";
}

SIGNAL("reg3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "reg3";
}

SIGNAL("R_M")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("DATA")
{
	MEMBERS = "DATA[5]", "DATA[4]", "DATA[3]", "DATA[2]", "DATA[1]", "DATA[0]";
}

GROUP("ADDRESS")
{
	MEMBERS = "ADDRESS[7]", "ADDRESS[6]", "ADDRESS[5]", "ADDRESS[4]", "ADDRESS[3]", "ADDRESS[2]", "ADDRESS[1]", "ADDRESS[0]";
}

GROUP("WORD1")
{
	MEMBERS = "WORD1[5]", "WORD1[4]", "WORD1[3]", "WORD1[2]", "WORD1[1]", "WORD1[0]";
}

GROUP("WORD2")
{
	MEMBERS = "WORD2[5]", "WORD2[4]", "WORD2[3]", "WORD2[2]", "WORD2[1]", "WORD2[0]";
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("ConBus[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 845.0;
	}
}

TRANSITION_LIST("ConBus[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 45.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 90.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 845.0;
	}
}

TRANSITION_LIST("ConBus[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 995.0;
	}
}

TRANSITION_LIST("ConBus[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("ConBus[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 845.0;
	}
}

TRANSITION_LIST("ConBus[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 845.0;
	}
}

TRANSITION_LIST("ConBus[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("ConBus[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("ConBus[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("WORD1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 65.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 795.0;
	}
}

TRANSITION_LIST("WORD1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 65.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 845.0;
	}
}

TRANSITION_LIST("WORD1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 845.0;
	}
}

TRANSITION_LIST("WORD1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 945.0;
	}
}

TRANSITION_LIST("WORD1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 845.0;
	}
}

TRANSITION_LIST("WORD1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 945.0;
	}
}

TRANSITION_LIST("WORD2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 895.0;
	}
}

TRANSITION_LIST("WORD2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 895.0;
	}
}

TRANSITION_LIST("WORD2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 795.0;
	}
}

TRANSITION_LIST("WORD2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 895.0;
	}
}

TRANSITION_LIST("WORD2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 895.0;
	}
}

TRANSITION_LIST("WORD2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 895.0;
	}
}

TRANSITION_LIST("DATA[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 16;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL Z FOR 15.0;
	}
}

TRANSITION_LIST("DATA[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 16;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL Z FOR 15.0;
	}
}

TRANSITION_LIST("DATA[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 16;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL Z FOR 15.0;
	}
}

TRANSITION_LIST("DATA[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 16;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL Z FOR 15.0;
	}
}

TRANSITION_LIST("DATA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 16;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL Z FOR 15.0;
	}
}

TRANSITION_LIST("DATA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 16;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL Z FOR 15.0;
	}
}

TRANSITION_LIST("ADDRESS[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 15.0;
	}
}

TRANSITION_LIST("ADDRESS[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 30.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 15.0;
	}
}

TRANSITION_LIST("ADDRESS[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 9;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 6;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL Z FOR 15.0;
	}
}

TRANSITION_LIST("ADDRESS[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 40.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 7;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 6;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL Z FOR 15.0;
	}
}

TRANSITION_LIST("ADDRESS[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 3;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL Z FOR 15.0;
	}
}

TRANSITION_LIST("ADDRESS[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 20.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 15.0;
	}
}

TRANSITION_LIST("ADDRESS[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 20.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 8;
			LEVEL Z FOR 20.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL Z FOR 20.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL Z FOR 15.0;
	}
}

TRANSITION_LIST("ADDRESS[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 5.0;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 5.0;
			LEVEL Z FOR 20.0;
		}
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 5.0;
			LEVEL Z FOR 20.0;
		}
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 15.0;
	}
}

TRANSITION_LIST("count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 15.0;
	}
}

TRANSITION_LIST("count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("FIRST_OP[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 135.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 845.0;
	}
}

TRANSITION_LIST("FIRST_OP[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 945.0;
	}
}

TRANSITION_LIST("JMP")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 795.0;
	}
}

TRANSITION_LIST("SECOND_OP[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 135.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 845.0;
	}
}

TRANSITION_LIST("SECOND_OP[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 945.0;
	}
}

TRANSITION_LIST("SECOND_OP[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 895.0;
	}
}

TRANSITION_LIST("SECOND_OP[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 85.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 895.0;
	}
}

TRANSITION_LIST("SECOND_OP[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 795.0;
	}
}

TRANSITION_LIST("SECOND_OP[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 85.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 895.0;
	}
}

TRANSITION_LIST("SECOND_OP[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 895.0;
	}
}

TRANSITION_LIST("SECOND_OP[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 85.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 895.0;
	}
}

TRANSITION_LIST("reg0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reg0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reg0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("reg0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reg0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("reg0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reg1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reg1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reg1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("reg1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reg1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("reg1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("reg2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reg2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reg2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("reg2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("reg2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reg2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reg3[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reg3[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reg3[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("reg3[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("reg3[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reg3[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("R_M")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 845.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "ConBus";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9, 10, 11, 12, 13, 14;
}

DISPLAY_LINE
{
	CHANNEL = "ConBus[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ConBus[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ConBus[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ConBus[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ConBus[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ConBus[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ConBus[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ConBus[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ConBus[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18, 19, 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "ADDRESS[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "DATA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27, 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "DATA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "WORD1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "WORD1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "WORD1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "WORD1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "WORD1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "WORD1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "WORD1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "WORD2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
	CHILDREN = 39, 40, 41, 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "WORD2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "WORD2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "WORD2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "WORD2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "WORD2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "WORD2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "FIRST_OP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
	CHILDREN = 46, 47;
}

DISPLAY_LINE
{
	CHANNEL = "FIRST_OP[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "FIRST_OP[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "SECOND_OP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
	CHILDREN = 49, 50, 51, 52, 53, 54, 55, 56;
}

DISPLAY_LINE
{
	CHANNEL = "SECOND_OP[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "SECOND_OP[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "SECOND_OP[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "SECOND_OP[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "SECOND_OP[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "SECOND_OP[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "SECOND_OP[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "SECOND_OP[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "R_M";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "JMP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 59;
	TREE_LEVEL = 0;
	CHILDREN = 60, 61, 62, 63, 64, 65;
}

DISPLAY_LINE
{
	CHANNEL = "reg0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "reg0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "reg0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "reg0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "reg0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "reg0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 59;
}

DISPLAY_LINE
{
	CHANNEL = "reg1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 66;
	TREE_LEVEL = 0;
	CHILDREN = 67, 68, 69, 70, 71, 72;
}

DISPLAY_LINE
{
	CHANNEL = "reg1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "reg1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "reg1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "reg1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "reg1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "reg1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 66;
}

DISPLAY_LINE
{
	CHANNEL = "reg2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 73;
	TREE_LEVEL = 0;
	CHILDREN = 74, 75, 76, 77, 78, 79;
}

DISPLAY_LINE
{
	CHANNEL = "reg2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "reg2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "reg2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "reg2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "reg2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "reg2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 73;
}

DISPLAY_LINE
{
	CHANNEL = "reg3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 80;
	TREE_LEVEL = 0;
	CHILDREN = 81, 82, 83, 84, 85, 86;
}

DISPLAY_LINE
{
	CHANNEL = "reg3[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "reg3[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "reg3[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "reg3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "reg3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "reg3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 80;
}

TIME_BAR
{
	TIME = 35000;
	MASTER = TRUE;
}
;
